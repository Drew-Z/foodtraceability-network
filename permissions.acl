/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample access control list.
 */
/*rule EverybodyCanReadEverything {
    description: "Allow all participants read access to all resources"
    participant: "org.foodtraceability.network.SampleParticipant"
    operation: READ
    resource: "org.foodtraceability.network.*"
    action: ALLOW
}

rule EverybodyCanSubmitTransactions {
    description: "Allow all participants to submit transactions"
    participant: "org.foodtraceability.network.SampleParticipant"
    operation: CREATE
    resource: "org.foodtraceability.network.SampleTransaction"
    action: ALLOW
}

rule OwnerHasFullAccessToTheirAssets {
    description: "Allow all participants full access to their assets"
    participant(p): "org.foodtraceability.network.SampleParticipant"
    operation: ALL
    resource(r): "org.foodtraceability.network.SampleAsset"
    condition: (r.owner.getIdentifier() === p.getIdentifier())
    action: ALLOW
}*/

rule TraderSeeUpdateThemselvesOnly {
  description: "Trader can see and update their own record only"
  participant(t): "org.foodtraceability.network.Trader"
  operation: READ, UPDATE
  resource(v): "org.foodtraceability.network.Trader"
  condition: (v.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule TraderSeeTheirFarmProducts {
  description: "Trader can see/work with their own FarmProducts"
  participant(t): "org.foodtraceability.network.Trader"
  operation: ALL
  resource(c): "org.foodtraceability.network.FarmProduct"
  condition: (c.owner.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule EnableTradeTxn {
    description: "Enable Traders to submit transactions"
    participant: "org.foodtraceability.network.Trader"
    operation: ALL
    resource: "org.foodtraceability.network.Trade"
    action: ALLOW
}

rule TradersSeeOwnHistoryOnly {
  description: "Traders should be able to see the history of their own transactions only"
  participant(t): "org.foodtraceability.network.Trader"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() != t.getIdentifier())
  action: DENY
}

rule RegulatorSeeThemselves {
  description: "Regulators can see and update their own record"
  participant: "org.foodtraceability.network.Regulator"
  operation: READ, UPDATE
  resource: "org.foodtraceability.network.Regulator"
  action: ALLOW
}

rule RegTransView {
    description: "Grant Regulator full access to Trade Transactions"
    participant: "org.foodtraceability.network.Regulator"
    operation: ALL
    resource: "org.foodtraceability.network.Trade"
    action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
